/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   _algo.h                                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: dinepomu <dinepomu@student.42berlin.de>    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/03/10 08:37:33 by dinepomu          #+#    #+#             */
/*   Updated: 2025/03/10 10:58:22 by dinepomu         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

/* ************************************************************************** */
/* https://linktr.ee/diegonmarcos											  */
/* ************************************************************************** */

#ifndef _ALGO_H
# define _ALGO_H

# include <unistd.h>

// ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓	//

/*#########################################################################	*/
/* 3. ALGOS graphic sorting parser others									*/
/*#########################################################################	*/

/* ************************************************************* */
/* ALGOS/SORTING 												 */
/* ************************************************************* */
void	heapify(int arr[], int n, int i);
void	heap_sort(int arr[], int n);
void	quick_sort(int arr[], int low, int high, int depthlimit);
int		ft_log_introsort(int n);
void	intro_sort(int arr[], int n);
void	swap_introsort(int *a, int *b);
int		partition(int arr[], int low, int high);
void	heapify(int arr[], int n, int i);

/* ************************************************************* */
/* ARITHMETIC/MATH 												 */
/* ************************************************************* */
int		ft_abs(int number);
void	matrix3_init(float (*matrix)[3]);
void	print_bits(unsigned char octet);

/* ************************************************************* */
/* ARITHMETIC/STATISTICS 										 */
/* ************************************************************* */

/* ************************************************************* */
/* ARITHMETIC/PROBABILITY 										 */
/* ************************************************************* */

#endif